apiVersion: v1
kind: List
metadata: {}
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: object-detection-app
      app.kubernetes.io/component: object-detection-app
      app.kubernetes.io/instance: object-detection-app
      app.kubernetes.io/part-of: object-detection-app
    name: object-detection-app
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: quay.io/cfchase/object-detection-app:latest
      from:
        kind: DockerImage
        name: quay.io/cfchase/object-detection-app:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"object-detection-app:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"object-detection-app\")].image"}]'
    creationTimestamp: null
    labels:
      app: object-detection-app
      app.kubernetes.io/component: object-detection-app
      app.kubernetes.io/instance: object-detection-app
      app.kubernetes.io/part-of: object-detection-app
    name: object-detection-app
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/part-of: object-detection-app
        deployment: object-detection-app
    strategy: {}
    template:
      metadata:
        labels:
          app.kubernetes.io/part-of: object-detection-app
          deployment: object-detection-app
      spec:
        containers:
        - image: ' '
          imagePullPolicy: Always
          name: object-detection-app
          ports:
          - containerPort: 8080
            protocol: TCP
          envFrom:
            - configMapRef:
                name: object-detection
            - secretRef:
                name: object-detection
          resources: {}
#          resources:
#            requests:
#              cpu: 1000m
#              memory: 2000Mi
#            limits:
#              cpu: 2000m
#              memory: 6000Mi
          livenessProbe:
            httpGet:
              path: /api/status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 15
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 15
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: object-detection-app
      app.kubernetes.io/component: object-detection-app
      app.kubernetes.io/instance: object-detection-app
      app.kubernetes.io/part-of: object-detection-app
    name: object-detection-app
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/part-of: object-detection-app
      deployment: object-detection-app
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: object-detection-app
      app.kubernetes.io/component: object-detection-app
      app.kubernetes.io/instance: object-detection-app
      app.kubernetes.io/part-of: object-detection-app
    name: object-detection-app
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: object-detection-app
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
